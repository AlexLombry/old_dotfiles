" Disable vi compatibility
set nocompatible

" source plugins file
so ~/.vim/plugins.vim

syntax enable
set backspace=indent,eol,start                                          "Make backspace behave like every other editor.
let mapleader = ',' 						    	"The default is \, but a comma is much better.
set number								"Let's activate line numbers.




"-------------Visuals--------------"
colorscheme atom-dark-256
set t_CO=256								"Use 256 colors. This is useful for Terminal Vim.
set guifont=Fira_Code:h17						"Set the default font family and size.
set guioptions-=e							"We don't want Gui tabs.
set linespace=15   						        "Macvim-specific line-height.

set guioptions-=l                                                       "Disable Gui scrollbars.
set guioptions-=L
set guioptions-=r
set guioptions-=R




"-------------Search--------------"
set hlsearch								"Highlight all matched terms.
set incsearch								"Incrementally highlight, as we type.




"-------------Split Management--------------"
set splitbelow 								"Make splits default to below...
set splitright								"And to the right. This feels more natural.

"We'll set simpler mappings to switch between splits.
nmap <C-J> <C-W><C-J>
nmap <C-K> <C-W><C-K>
nmap <C-H> <C-W><C-H>
nmap <C-L> <C-W><C-L>


"-------------Mappings--------------"
"Make it easy to edit the Vimrc file.
nmap <Leader>vi :tabedit $MYVIMRC<cr>

"Add simple highlight removal.
nmap <Leader><space> :nohlsearch<cr>

"Quickly browse to any tag/symbol in the project.
"Tip: run ctags -R to regenerated the index.
nmap <Leader>f :tag<space>




"-------------Plugins--------------"
"/
"/ CtrlP
"/
let g:ctrlp_custom_ignore = 'node_modules\DS_Store\|git'
let g:ctrlp_match_window = 'top,order:ttb,min:1,max:30,results:30'

nmap <C-p> :CtrlP<cr>
nmap <C-r> :CtrlPBufTag<cr>
nmap <C-e> :CtrlPMRUFiles<cr>


"/
"/ NERDTree
"/
let NERDTreeHijackNetrw = 0

"Make NERDTree easier to toggle.
nmap <c-b> :NERDTreeToggle<cr>




"-------------Auto-Commands--------------"
"Automatically source the Vimrc file on save.

augroup autosourcing
	autocmd!
	autocmd BufWritePost .vimrc source %
augroup END




"-------------Tips and Reminders--------------"
" - Press 'zz' to instantly center the line where the cursor is located.
" Powerline bar configuration
source /usr/local/lib/python2.7/site-packages/powerline/bindings/vim/plugin/powerline.vim
set laststatus=2

"Easy escaping to normal model
imap jk <esc>
nmap <C-l> :call PhpCsFixerFixFile()<cr>

" Run php linter on current file
map <Leader>l :!php -l %<cr>

" Swap files out of the project root
set backupdir=~/.vim/backups//
set directory=~/.vim/swap//

set encoding=utf-8 " Necessary to show Unicode glyphs

" Auto-remove trailing spaces
autocmd BufWritePre *.php :%s/\s\+$//e

" Edit todo list for project
nmap ,todo :e todo.txt<cr>

" Set tags
set tags+=./tags.vendors,tags.vendors

" If php-cs-fixer is in $PATH, you don't need to define line below
let g:php_cs_fixer_enable_default_mapping = 1
let g:php_cs_fixer_path='php-cs-fixer'
let g:php_cs_fixer_level = "psr2"                  " which level ?
let g:php_cs_fixer_config = "default"             " configuration
let g:php_cs_fixer_php_path = "php"               " Path to PHP

" source vimrc file when saving it
" Delete all buffer
nmap <silent> ,da :exec "1," . bufnr('$') . "bd"<cr>
let g:powerline_config_overrides={'common': {'reload_config': 0}}

set clipboard=unnamed
" fast scrolling
set ttyfast
" Retain buffer until quit
set hidden
" Line numbers are nice
set ruler

" turn off nohlsearch
nmap <silent> <leader><Space> :nohlsearch<CR>
" Switch between files with ,,
nnoremap <leader><leader> <c-^>
